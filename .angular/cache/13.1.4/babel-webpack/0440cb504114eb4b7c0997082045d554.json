{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, ChangeDetectionStrategy, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n/** Default values provider for rating */\n\nfunction RatingComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const value_r3 = ctx.value;\n    const index_r4 = ctx.index;\n    i0.ɵɵtextInterpolate(index_r4 < value_r3 ? \"\\u2605\" : \"\\u2606\");\n  }\n}\n\nfunction RatingComponent_ng_template_3_ng_template_3_Template(rf, ctx) {}\n\nconst _c0 = function (a0, a1) {\n  return {\n    index: a0,\n    value: a1\n  };\n};\n\nfunction RatingComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 4);\n    i0.ɵɵlistener(\"mouseenter\", function RatingComponent_ng_template_3_Template_span_mouseenter_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const index_r6 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.enter(index_r6 + 1);\n    })(\"click\", function RatingComponent_ng_template_3_Template_span_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const index_r6 = restoredCtx.index;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.rate(index_r6 + 1);\n    });\n    i0.ɵɵtemplate(3, RatingComponent_ng_template_3_ng_template_3_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const r_r5 = ctx.$implicit;\n    const index_r6 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(2);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"(\", index_r6 < ctx_r2.value ? \"*\" : \" \", \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"cursor\", ctx_r2.readonly ? \"default\" : \"pointer\");\n    i0.ɵɵclassProp(\"active\", index_r6 < ctx_r2.value);\n    i0.ɵɵproperty(\"title\", r_r5.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.customTemplate || _r0)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(8, _c0, index_r6, ctx_r2.value));\n  }\n}\n\nclass RatingConfig {\n  constructor() {\n    /** aria label for rating */\n    this.ariaLabel = 'rating';\n  }\n\n}\n\nRatingConfig.ɵfac = function RatingConfig_Factory(t) {\n  return new (t || RatingConfig)();\n};\n\nRatingConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RatingConfig,\n  factory: RatingConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RatingConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nconst RATING_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RatingComponent),\n  multi: true\n};\n\nclass RatingComponent {\n  constructor(changeDetection, config) {\n    this.changeDetection = changeDetection;\n    /** number of icons */\n\n    this.max = 5;\n    /** if true will not react on any user events */\n\n    this.readonly = false;\n    /** array of icons titles, default: ([\"one\", \"two\", \"three\", \"four\", \"five\"]) */\n\n    this.titles = [];\n    /** fired when icon selected, $event:number equals to selected rating */\n\n    this.onHover = new EventEmitter();\n    /** fired when icon selected, $event:number equals to previous rating value */\n\n    this.onLeave = new EventEmitter();\n    this.onChange = Function.prototype;\n    this.onTouched = Function.prototype;\n    /** aria label for rating */\n\n    this.ariaLabel = 'rating';\n    this.range = [];\n    this.value = 0;\n    Object.assign(this, config);\n  }\n\n  onKeydown(event) {\n    if ([37, 38, 39, 40].indexOf(event.which) === -1) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    const sign = event.which === 38 || event.which === 39 ? 1 : -1;\n    this.rate(this.value + sign);\n  }\n\n  ngOnInit() {\n    this.max = this.max || 5;\n    this.titles = typeof this.titles !== 'undefined' && this.titles.length > 0 ? this.titles : [];\n    this.range = this.buildTemplateObjects(this.max);\n  } // model -> view\n\n\n  writeValue(value) {\n    if (value % 1 !== value) {\n      this.value = Math.round(value);\n      this.preValue = value;\n      this.changeDetection.markForCheck();\n      return;\n    }\n\n    this.preValue = value;\n    this.value = value;\n    this.changeDetection.markForCheck();\n  }\n\n  enter(value) {\n    if (!this.readonly) {\n      this.value = value;\n      this.changeDetection.markForCheck();\n      this.onHover.emit(value);\n    }\n  }\n\n  reset() {\n    if (typeof this.preValue === 'number') {\n      this.value = Math.round(this.preValue);\n      this.changeDetection.markForCheck();\n      this.onLeave.emit(this.value);\n    }\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  rate(value) {\n    if (!this.readonly && this.range && value >= 0 && value <= this.range.length) {\n      this.writeValue(value);\n      this.onChange(value);\n    }\n  }\n\n  buildTemplateObjects(max) {\n    const result = [];\n\n    for (let i = 0; i < max; i++) {\n      result.push({\n        index: i,\n        title: this.titles[i] || i + 1\n      });\n    }\n\n    return result;\n  }\n\n}\n\nRatingComponent.ɵfac = function RatingComponent_Factory(t) {\n  return new (t || RatingComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(RatingConfig));\n};\n\nRatingComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RatingComponent,\n  selectors: [[\"rating\"]],\n  hostBindings: function RatingComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function RatingComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeydown($event);\n      });\n    }\n  },\n  inputs: {\n    max: \"max\",\n    readonly: \"readonly\",\n    titles: \"titles\",\n    customTemplate: \"customTemplate\"\n  },\n  outputs: {\n    onHover: \"onHover\",\n    onLeave: \"onLeave\"\n  },\n  features: [i0.ɵɵProvidersFeature([RATING_CONTROL_VALUE_ACCESSOR])],\n  decls: 4,\n  vars: 4,\n  consts: [[\"tabindex\", \"0\", \"role\", \"slider\", \"aria-valuemin\", \"0\", 3, \"mouseleave\", \"keydown\"], [\"star\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"sr-only\", \"visually-hidden\"], [1, \"bs-rating-star\", 3, \"title\", \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function RatingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵlistener(\"mouseleave\", function RatingComponent_Template_span_mouseleave_0_listener() {\n        return ctx.reset();\n      })(\"keydown\", function RatingComponent_Template_span_keydown_0_listener($event) {\n        return ctx.onKeydown($event);\n      });\n      i0.ɵɵtemplate(1, RatingComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(3, RatingComponent_ng_template_3_Template, 4, 11, \"ng-template\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-valuemax\", ctx.range.length)(\"aria-valuenow\", ctx.value);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.range);\n    }\n  },\n  directives: [i2.NgForOf, i2.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RatingComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rating',\n      providers: [RATING_CONTROL_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<span (mouseleave)=\\\"reset()\\\" (keydown)=\\\"onKeydown($event)\\\" tabindex=\\\"0\\\"\\n      role=\\\"slider\\\" aria-valuemin=\\\"0\\\"\\n      [attr.aria-label]=\\\"ariaLabel\\\"\\n      [attr.aria-valuemax]=\\\"range.length\\\"\\n      [attr.aria-valuenow]=\\\"value\\\">\\n  <ng-template #star let-value=\\\"value\\\" let-index=\\\"index\\\">{{ index < value ? '&#9733;' : '&#9734;' }}</ng-template>\\n  <ng-template ngFor let-r [ngForOf]=\\\"range\\\" let-index=\\\"index\\\">\\n    <span class=\\\"sr-only visually-hidden\\\">({{ index < value ? '*' : ' ' }})</span>\\n    <span class=\\\"bs-rating-star\\\"\\n          (mouseenter)=\\\"enter(index + 1)\\\"\\n          (click)=\\\"rate(index + 1)\\\"\\n          [title]=\\\"r.title\\\"\\n          [style.cursor]=\\\"readonly ? 'default' : 'pointer'\\\"\\n          [class.active]=\\\"index < value\\\">\\n      <ng-template [ngTemplateOutlet]=\\\"customTemplate || star\\\"\\n                   [ngTemplateOutletContext]=\\\"{index: index, value: value}\\\">\\n      </ng-template>\\n    </span>\\n  </ng-template>\\n</span>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: RatingConfig\n    }];\n  }, {\n    max: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    titles: [{\n      type: Input\n    }],\n    customTemplate: [{\n      type: Input\n    }],\n    onHover: [{\n      type: Output\n    }],\n    onLeave: [{\n      type: Output\n    }],\n    onKeydown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})();\n\nclass RatingModule {\n  static forRoot() {\n    return {\n      ngModule: RatingModule,\n      providers: []\n    };\n  }\n\n}\n\nRatingModule.ɵfac = function RatingModule_Factory(t) {\n  return new (t || RatingModule)();\n};\n\nRatingModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RatingModule\n});\nRatingModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RatingModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [RatingComponent],\n      exports: [RatingComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { RatingComponent, RatingConfig, RatingModule };","map":{"version":3,"sources":["D:/test/test/inmobly-video-player/node_modules/ngx-bootstrap/rating/fesm2015/ngx-bootstrap-rating.mjs"],"names":["i0","Injectable","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","Input","Output","HostListener","NgModule","NG_VALUE_ACCESSOR","i2","CommonModule","RatingConfig","constructor","ariaLabel","ɵfac","ɵprov","type","args","providedIn","RATING_CONTROL_VALUE_ACCESSOR","provide","useExisting","RatingComponent","multi","changeDetection","config","max","readonly","titles","onHover","onLeave","onChange","Function","prototype","onTouched","range","value","Object","assign","onKeydown","event","indexOf","which","preventDefault","stopPropagation","sign","rate","ngOnInit","length","buildTemplateObjects","writeValue","Math","round","preValue","markForCheck","enter","emit","reset","registerOnChange","fn","registerOnTouched","result","i","push","index","title","ChangeDetectorRef","ɵcmp","NgForOf","NgTemplateOutlet","selector","providers","OnPush","template","customTemplate","RatingModule","forRoot","ngModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, ChangeDetectionStrategy, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/** Default values provider for rating */\nclass RatingConfig {\n    constructor() {\n        /** aria label for rating */\n        this.ariaLabel = 'rating';\n    }\n}\nRatingConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RatingConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nRatingConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RatingConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RatingConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nconst RATING_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RatingComponent),\n    multi: true\n};\nclass RatingComponent {\n    constructor(changeDetection, config) {\n        this.changeDetection = changeDetection;\n        /** number of icons */\n        this.max = 5;\n        /** if true will not react on any user events */\n        this.readonly = false;\n        /** array of icons titles, default: ([\"one\", \"two\", \"three\", \"four\", \"five\"]) */\n        this.titles = [];\n        /** fired when icon selected, $event:number equals to selected rating */\n        this.onHover = new EventEmitter();\n        /** fired when icon selected, $event:number equals to previous rating value */\n        this.onLeave = new EventEmitter();\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        /** aria label for rating */\n        this.ariaLabel = 'rating';\n        this.range = [];\n        this.value = 0;\n        Object.assign(this, config);\n    }\n    onKeydown(event) {\n        if ([37, 38, 39, 40].indexOf(event.which) === -1) {\n            return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        const sign = event.which === 38 || event.which === 39 ? 1 : -1;\n        this.rate(this.value + sign);\n    }\n    ngOnInit() {\n        this.max = this.max || 5;\n        this.titles =\n            typeof this.titles !== 'undefined' && this.titles.length > 0\n                ? this.titles\n                : [];\n        this.range = this.buildTemplateObjects(this.max);\n    }\n    // model -> view\n    writeValue(value) {\n        if (value % 1 !== value) {\n            this.value = Math.round(value);\n            this.preValue = value;\n            this.changeDetection.markForCheck();\n            return;\n        }\n        this.preValue = value;\n        this.value = value;\n        this.changeDetection.markForCheck();\n    }\n    enter(value) {\n        if (!this.readonly) {\n            this.value = value;\n            this.changeDetection.markForCheck();\n            this.onHover.emit(value);\n        }\n    }\n    reset() {\n        if (typeof this.preValue === 'number') {\n            this.value = Math.round(this.preValue);\n            this.changeDetection.markForCheck();\n            this.onLeave.emit(this.value);\n        }\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    rate(value) {\n        if (!this.readonly && this.range\n            && value >= 0 && value <= this.range.length) {\n            this.writeValue(value);\n            this.onChange(value);\n        }\n    }\n    buildTemplateObjects(max) {\n        const result = [];\n        for (let i = 0; i < max; i++) {\n            result.push({\n                index: i,\n                title: this.titles[i] || i + 1\n            });\n        }\n        return result;\n    }\n}\nRatingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RatingComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: RatingConfig }], target: i0.ɵɵFactoryTarget.Component });\nRatingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: RatingComponent, selector: \"rating\", inputs: { max: \"max\", readonly: \"readonly\", titles: \"titles\", customTemplate: \"customTemplate\" }, outputs: { onHover: \"onHover\", onLeave: \"onLeave\" }, host: { listeners: { \"keydown\": \"onKeydown($event)\" } }, providers: [RATING_CONTROL_VALUE_ACCESSOR], ngImport: i0, template: \"<span (mouseleave)=\\\"reset()\\\" (keydown)=\\\"onKeydown($event)\\\" tabindex=\\\"0\\\"\\n      role=\\\"slider\\\" aria-valuemin=\\\"0\\\"\\n      [attr.aria-label]=\\\"ariaLabel\\\"\\n      [attr.aria-valuemax]=\\\"range.length\\\"\\n      [attr.aria-valuenow]=\\\"value\\\">\\n  <ng-template #star let-value=\\\"value\\\" let-index=\\\"index\\\">{{ index < value ? '&#9733;' : '&#9734;' }}</ng-template>\\n  <ng-template ngFor let-r [ngForOf]=\\\"range\\\" let-index=\\\"index\\\">\\n    <span class=\\\"sr-only visually-hidden\\\">({{ index < value ? '*' : ' ' }})</span>\\n    <span class=\\\"bs-rating-star\\\"\\n          (mouseenter)=\\\"enter(index + 1)\\\"\\n          (click)=\\\"rate(index + 1)\\\"\\n          [title]=\\\"r.title\\\"\\n          [style.cursor]=\\\"readonly ? 'default' : 'pointer'\\\"\\n          [class.active]=\\\"index < value\\\">\\n      <ng-template [ngTemplateOutlet]=\\\"customTemplate || star\\\"\\n                   [ngTemplateOutletContext]=\\\"{index: index, value: value}\\\">\\n      </ng-template>\\n    </span>\\n  </ng-template>\\n</span>\\n\", directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RatingComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'rating', providers: [RATING_CONTROL_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span (mouseleave)=\\\"reset()\\\" (keydown)=\\\"onKeydown($event)\\\" tabindex=\\\"0\\\"\\n      role=\\\"slider\\\" aria-valuemin=\\\"0\\\"\\n      [attr.aria-label]=\\\"ariaLabel\\\"\\n      [attr.aria-valuemax]=\\\"range.length\\\"\\n      [attr.aria-valuenow]=\\\"value\\\">\\n  <ng-template #star let-value=\\\"value\\\" let-index=\\\"index\\\">{{ index < value ? '&#9733;' : '&#9734;' }}</ng-template>\\n  <ng-template ngFor let-r [ngForOf]=\\\"range\\\" let-index=\\\"index\\\">\\n    <span class=\\\"sr-only visually-hidden\\\">({{ index < value ? '*' : ' ' }})</span>\\n    <span class=\\\"bs-rating-star\\\"\\n          (mouseenter)=\\\"enter(index + 1)\\\"\\n          (click)=\\\"rate(index + 1)\\\"\\n          [title]=\\\"r.title\\\"\\n          [style.cursor]=\\\"readonly ? 'default' : 'pointer'\\\"\\n          [class.active]=\\\"index < value\\\">\\n      <ng-template [ngTemplateOutlet]=\\\"customTemplate || star\\\"\\n                   [ngTemplateOutletContext]=\\\"{index: index, value: value}\\\">\\n      </ng-template>\\n    </span>\\n  </ng-template>\\n</span>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: RatingConfig }]; }, propDecorators: { max: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], titles: [{\n                type: Input\n            }], customTemplate: [{\n                type: Input\n            }], onHover: [{\n                type: Output\n            }], onLeave: [{\n                type: Output\n            }], onKeydown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\n\nclass RatingModule {\n    static forRoot() {\n        return {\n            ngModule: RatingModule,\n            providers: []\n        };\n    }\n}\nRatingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RatingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRatingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RatingModule, declarations: [RatingComponent], imports: [CommonModule], exports: [RatingComponent] });\nRatingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RatingModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RatingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [RatingComponent],\n                    exports: [RatingComponent]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RatingComponent, RatingConfig, RatingModule };\n"]},"metadata":{},"sourceType":"module"}